package com.south.servlet;

import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;

import com.south.util.AesException;
import com.south.util.WXBizMsgCrypt;
import com.south.util.WeixinUtil;
import com.south.util.XMLParse;

@WebServlet("/ds.do")
public class DailyServlet extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// 微信加密签名  
		String msg_signature = req.getParameter("msg_signature");  
	        // 时间戳  
	        String timestamp = req.getParameter("timestamp");  
	        // 随机数  
	        String nonce = req.getParameter("nonce");  
	        // 随机字符串  
	        String echostr = req.getParameter("echostr");  
	        // 流
	        PrintWriter out = resp.getWriter();  
	        // 通过检验signature对请求进行校验，若校验成功则原样返回echostr，表示接入成功，否则接入失败  
	        String result = null;  
	        try {  
	        	WXBizMsgCrypt wxcpt = new WXBizMsgCrypt(WeixinUtil.token,WeixinUtil.ENCODINGAESKEY,WeixinUtil.CORPID);  
	        	// 验证URL函数
	        	result = wxcpt.VerifyURL(msg_signature, timestamp, nonce, echostr);  
	        } catch (AesException e) {  
	            e.printStackTrace();  
	        }  
	        if (result == null) {  
	        	// result为空，赋予token，即在上文截图中设置的token
	        	result = WeixinUtil.token;
	        }
	        out.print(result);
	        out.close();  
	        out = null;  

		
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		
			Map<String, String> map;
			try {
				map = xmlToMap(req);
				String toUserName=map.get("ToUserName");
				String agentID=map.get("AgentID");
				String Encrypt=map.get("Encrypt");
				System.out.println(toUserName);
				System.out.println(agentID);
				System.out.println(Encrypt);
			} catch (DocumentException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		
			
			
	
	}
	
	/**
	 * @author yao
	 *进行消息的格式转换(xml转为Map)
	 */
	public  Map<String,String> xmlToMap(HttpServletRequest request) throws IOException, DocumentException{
		Map<String,String> map=new HashMap<String,String>();
		SAXReader reader=new SAXReader();
		
		//从request中获取输入流
		InputStream ins=request.getInputStream();
		Document doc=reader.read(ins);
		
		Element root =doc.getRootElement();
		List<Element> list=root.elements();
		
		for(Element e:list) {
			map.put(e.getName(), e.getText());
		}
		
		ins.close();
		return map;
	}
	

}
