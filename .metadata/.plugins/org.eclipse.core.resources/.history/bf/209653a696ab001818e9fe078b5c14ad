package com.south.servlet;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.ConnectException;
import java.net.URL;
import java.util.Map;

import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocketFactory;
import javax.net.ssl.TrustManager;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.south.util.MyX509TrustManager;
import com.south.util.TokenUtil;
import com.south.util.WeixinUtil;

import net.sf.json.JSONObject;

/**
 * @author yao
 *回调函数，微信公众号授权,获得用户的openId
 */
@WebServlet("/callBack.do")
public class CallBackServlet extends HttpServlet{

	private static final long serialVersionUID = -6135777238592953632L;


	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	
		
		Map<String, Object> tokenMap=TokenUtil.getToken();
		String access_token=(String) tokenMap.get("access_token");
		//System.out.println(access_token);
		
		//通过code换取网页授权access_token
		String code=req.getParameter("code");
		//System.out.println(code);
		
		String url="https://qyapi.weixin.qq.com/cgi-bin/user/getuserinfo?"
				+ "access_token="+access_token
				+ "&code="+code;
				
		JSONObject jsonObject=WeixinUtil.doGetStr(url);
		//System.out.println(jsonObject);
		String UserId=jsonObject.getString("UserId");
		String user_ticket=jsonObject.getString("user_ticket");
		
		System.out.println(user_ticket);
		System.out.println(access_token);
		//通过网页授权access_token和openid获取用户基本信息
		String infoUrl="https://qyapi.weixin.qq.com/cgi-bin/user/getuserdetail?"
				+ "access_token="+access_token;
		
		//获取用户的基本信息
		JSONObject userInfo=httpRequest(infoUrl, "POST",user_ticket);
		//System.out.println("userInfo:"+userInfo);
		//System.out.println(userInfo);
		//String name=userInfo.getString("name");
		String userid=userInfo.getString("userid");
		//String mobile=userInfo.getString("mobile");
		//String email=userInfo.getString("email");
		//System.out.println("name="+name+",userid="+userid);
		//System.out.println("mobile="+mobile+",email="+email);
		
		/*System.out.println("nickName="+nickName+",sex="+sex);
		System.out.println("---------CallBackServlet----------");
		req.setAttribute("nickName", nickName);
		req.setAttribute("sex", sex);
		req.setAttribute("openid", openid);
		req.getRequestDispatcher("/OAuth/register.jsp").forward(req, resp);*/
		
		
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
	}
	
	/**
	 * 1.发起https请求并获取结果 
	 *  
	 * @param requestUrl 请求地址 
	 * @param requestMethod 请求方式（GET、POST） 
	 * @param outputStr 提交的数据 
	 * @return JSONObject(通过JSONObject.get(key)的方式获取json对象的属性值) 
	 */  
	public static JSONObject httpRequest(String requestUrl, String requestMethod, String outputStr) {  
		JSONObject jsonObject = null;  
		StringBuffer buffer = new StringBuffer();  
		try {  
			// 创建SSLContext对象，并使用我们指定的信任管理器初始化  
			TrustManager[] tm = { new MyX509TrustManager() };  
			SSLContext sslContext = SSLContext.getInstance("SSL", "SunJSSE");  
			sslContext.init(null, tm, new java.security.SecureRandom());  
			// 从上述SSLContext对象中得到SSLSocketFactory对象  
			SSLSocketFactory ssf = sslContext.getSocketFactory();  

			URL url = new URL(requestUrl);  
			HttpsURLConnection httpUrlConn = (HttpsURLConnection) url.openConnection();  
			httpUrlConn.setSSLSocketFactory(ssf);  

			httpUrlConn.setDoOutput(true);  
			httpUrlConn.setDoInput(true);  
			httpUrlConn.setUseCaches(false);  
			// 设置请求方式（GET/POST）  
			httpUrlConn.setRequestMethod(requestMethod);  

			if ("GET".equalsIgnoreCase(requestMethod))  
				httpUrlConn.connect();  

			// 当有数据需要提交时  
			if (null != outputStr) {  
				OutputStream outputStream = httpUrlConn.getOutputStream();  
				// 注意编码格式，防止中文乱码  
				outputStream.write(outputStr.getBytes("UTF-8"));  
				outputStream.close();  
			}  

			// 将返回的输入流转换成字符串  
			InputStream inputStream = httpUrlConn.getInputStream();  
			InputStreamReader inputStreamReader = new InputStreamReader(inputStream, "UTF-8");  
			BufferedReader bufferedReader = new BufferedReader(inputStreamReader);  

			String str = null;  
			while ((str = bufferedReader.readLine()) != null) {  
				buffer.append(str);  
			}  
			bufferedReader.close();  
			inputStreamReader.close();  
			// 释放资源  
			inputStream.close();  
			inputStream = null;  
			httpUrlConn.disconnect();  
			jsonObject = JSONObject.fromObject(buffer.toString());  
		} catch (ConnectException ce) {  
			//log.error("Weixin server connection timed out.");  
		} catch (Exception e) {  
			//log.error("https request error:{}", e);  
		}  
		return jsonObject;  
	}  
}
