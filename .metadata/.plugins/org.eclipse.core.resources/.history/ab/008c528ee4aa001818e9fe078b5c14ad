package com.south.servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.dom4j.DocumentException;

import com.south.dao.UserDao;
import com.south.dao.UserDaoImpl;
import com.south.util.AesException;
import com.south.util.CheckUtil;
import com.south.util.MessageUtil;
import com.south.util.WXBizMsgCrypt;
import com.south.util.WeixinUtil;


@WebServlet("/ds.do")
public class DailyServlet extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// 微信加密签名  
		String msg_signature = req.getParameter("msg_signature");  
	        // 时间戳  
	        String timestamp = req.getParameter("timestamp");  
	        // 随机数  
	        String nonce = req.getParameter("nonce");  
	        // 随机字符串  
	        String echostr = req.getParameter("echostr");  
	        // 流
	        PrintWriter out = resp.getWriter();  
	        // 通过检验signature对请求进行校验，若校验成功则原样返回echostr，表示接入成功，否则接入失败  
	        String result = null;  
	        try {  
	        	WXBizMsgCrypt wxcpt = new WXBizMsgCrypt(WeixinUtil.token,WeixinUtil.ENCODINGAESKEY,WeixinUtil.CORPID);  
	        	// 验证URL函数
	        	result = wxcpt.VerifyURL(msg_signature, timestamp, nonce, echostr);  
	        } catch (AesException e) {  
	            e.printStackTrace();  
	        }  
	        if (result == null) {  
	        	// result为空，赋予token，即在上文截图中设置的token
	        	result = WeixinUtil.token;
	        }
	        out.print(result);
	        out.close();  
	        out = null;  

		
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		
		req.setCharacterEncoding("UTF-8");
		resp.setCharacterEncoding("UTF-8");
		
		
		PrintWriter out=resp.getWriter();
		try {
			Map<String,String> map=MessageUtil.xmlToMap(req);
			String toUserName=map.get("ToUserName");
			String fromUserName=map.get("FromUserName");
			//String createTime;
			String msgType=map.get("MsgType");
			String content=map.get("Content");
			//String msgId;
			
			
			String message=null;
			
			//System.out.println("+++++");
			//判断是否为文本消息
			if(MessageUtil.MESSAGE_TEXT.equals(msgType)) {
				
				message=MessageUtil.initText(toUserName, fromUserName, MessageUtil.menuText());

				
				
			}else if(MessageUtil.MESSAGE_EVEN.equals(msgType)) {
				String eventType=map.get("Event");
				if(MessageUtil.MESSAGE_SUBSCRIBLE.equals(eventType)) {
					System.out.println("++++++++++++++++++++");
					message=MessageUtil.initText(toUserName, fromUserName, MessageUtil.menuText());
					
				}else if(MessageUtil.MESSAGE_VIEW.equals(eventType)) {
					/*String url=map.get("EventKey");
					message=MessageUtil.initText(toUserName, fromUserName, url);*/
				}else if(MessageUtil.MESSAGE_UNSUBSCRIBLE.equals(eventType)) {
					
					UserDao userDao=new UserDaoImpl();
					userDao.deleteUser(fromUserName);
				}
				
			}
			out.print(message);
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			out.close();
		}
	}
	

}
